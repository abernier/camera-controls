name: Build and Release to npm
on:
  push:
    branches:
      - 'master'

# Cancel any previous run (see: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  release-job:
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.main.outputs.released }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - id: main
        run: |
          npm ci
          npm run release
          if [ -d "dist/" ]; then
              echo "released=true" >> "$GITHUB_OUTPUT"

              npm run typedoc

              # Remove any unnecessary files or directories that might contain symlinks or large files
              rm -rf examples/node_modules
              find examples -name "* alias" -delete

              # Replace symbolic link with actual files
              # Remove the symbolic link to dist
              rm -rf examples/dist
              # Copy the actual dist content to examples/dist
              cp -r dist examples/dist

              # Copy only the required content to the docs folder
              mkdir -p docs
              cp -r dist/* docs/
              cp -r examples docs/

              # Delete any remaining symbolic links and macOS aliases under the docs directory
              find docs -type l -delete
              find docs -name "* alias" -delete
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: steps.main.outputs.released == 'true'
        name: Validate docs directory before upload
        run: |
          echo "Checking for symbolic links..."
          if find docs -type l | grep -q .; then
            echo "Error: Symbolic links found in docs directory"
            find docs -type l
            exit 1
          fi

          echo "Checking directory size..."
          DOCS_SIZE=$(du -sb docs | cut -f1 2>/dev/null || echo "0")
          if [ "$DOCS_SIZE" = "0" ]; then
            # Fallback for systems without -b option (like macOS)
            DOCS_SIZE_KB=$(du -sk docs | cut -f1)
            DOCS_SIZE=$((DOCS_SIZE_KB * 1024))
          fi
          MAX_SIZE=$((1024*1024*1024*8))  # 8GB limit to be safe
          if [ "$DOCS_SIZE" -gt "$MAX_SIZE" ]; then
            echo "Error: docs directory is too large (${DOCS_SIZE} bytes)"
            exit 1
          fi

          echo "docs directory size: $(du -sh docs)"
          echo "docs directory is ready for upload"

      - if: steps.main.outputs.released == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./docs

  # See: https://github.com/actions/deploy-pages
  deploy-job:
    needs: release-job
    if: needs.release-job.outputs.released == 'true'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
